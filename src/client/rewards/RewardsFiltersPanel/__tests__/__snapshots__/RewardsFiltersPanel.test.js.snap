// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RewardsFiltersPanel renders and matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <IntlProvider>
    <InjectIntl(RewardsFiltersPanel)
      activeFilters={
        Object {
          "guideNames": Array [],
          "types": Array [],
        }
      }
      activePayableFilters={Array []}
      campaignsTypes={
        Array [
          "reviews",
        ]
      }
      location={
        Object {
          "hash": "",
          "key": "xitq61",
          "pathname": "/rewards/payables",
          "search": "",
          "state": null,
        }
      }
      sponsors={
        Array [
          "rina83",
        ]
      }
    />
  </IntlProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activeFilters": Object {
        "guideNames": Array [],
        "types": Array [],
      },
      "activePayableFilters": Array [],
      "campaignsTypes": Array [
        "reviews",
      ],
      "location": Object {
        "hash": "",
        "key": "xitq61",
        "pathname": "/rewards/payables",
        "search": "",
        "state": null,
      },
      "sponsors": Array [
        "rina83",
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeFilters": Object {
          "guideNames": Array [],
          "types": Array [],
        },
        "activePayableFilters": Array [],
        "campaignsTypes": Array [
          "reviews",
        ],
        "location": Object {
          "hash": "",
          "key": "xitq61",
          "pathname": "/rewards/payables",
          "search": "",
          "state": null,
        },
        "sponsors": Array [
          "rina83",
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): Object {
    "intl": Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    },
  },
}
`;

exports[`RewardsFiltersPanel should render activePayableFilters 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): ShallowWrapper {
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <IntlProvider>
      <InjectIntl(RewardsFiltersPanel)
        activePayableFilters={
          Array [
            Object {
              "defaultMessage": "Over {value} days",
              "filterName": "days",
              "value": 15,
            },
          ]
        }
        campaignsTypes={
          Array [
            "reviews",
          ]
        }
        location={
          Object {
            "hash": "",
            "key": "xitq61",
            "pathname": "/rewards/receivables",
            "search": "",
            "state": null,
          }
        }
      />
    </IntlProvider>,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "checkPropTypes": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateError": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activePayableFilters": Array [
          Object {
            "defaultMessage": "Over {value} days",
            "filterName": "days",
            "value": 15,
          },
        ],
        "campaignsTypes": Array [
          "reviews",
        ],
        "location": Object {
          "hash": "",
          "key": "xitq61",
          "pathname": "/rewards/receivables",
          "search": "",
          "state": null,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activePayableFilters": Array [
            Object {
              "defaultMessage": "Over {value} days",
              "filterName": "days",
              "value": 15,
            },
          ],
          "campaignsTypes": Array [
            "reviews",
          ],
          "location": Object {
            "hash": "",
            "key": "xitq61",
            "pathname": "/rewards/receivables",
            "search": "",
            "state": null,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
          "legacyContextMode": "parent",
          "lifecycles": Object {
            "componentDidUpdate": Object {
              "onSetState": true,
            },
            "getChildContext": Object {
              "calledByRenderer": false,
            },
            "getDerivedStateFromError": true,
            "getDerivedStateFromProps": Object {
              "hasShouldComponentUpdateBug": false,
            },
            "getSnapshotBeforeUpdate": true,
            "setState": Object {
              "skipsComponentDidUpdateOnNullish": true,
            },
          },
        },
      },
      Symbol(enzyme.__providerValues__): undefined,
    },
    Symbol(enzyme.__providerValues__): Map {},
    Symbol(enzyme.__childContext__): Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): undefined,
  Symbol(enzyme.__nodes__): Array [],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__rootNodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activePayableFilters": Array [
          Object {
            "defaultMessage": "Over {value} days",
            "filterName": "days",
            "value": 15,
          },
        ],
        "campaignsTypes": Array [
          "reviews",
        ],
        "location": Object {
          "hash": "",
          "key": "xitq61",
          "pathname": "/rewards/receivables",
          "search": "",
          "state": null,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__providerValues__): null,
}
`;
